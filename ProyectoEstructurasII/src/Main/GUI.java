/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Main;

import Clases.XMLClass;
import Clases.Archivos;
import Clases.BTree;
import Clases.Campos;
import Clases.CrearArchivoCiudad;

import java.io.BufferedWriter;

import java.awt.event.KeyEvent;

import java.awt.event.KeyEvent;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.OutputStream;
import java.io.RandomAccessFile;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.Scanner;
import java.util.StringTokenizer;
import java.util.TreeMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.ListModel;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import jxl.CellView;
import jxl.Workbook;
import jxl.WorkbookSettings;
import jxl.biff.DisplayFormat;
import jxl.format.UnderlineStyle;
import jxl.write.Formula;
import jxl.write.Label;
import jxl.write.WritableCellFormat;
import jxl.write.WritableFont;
import jxl.write.WritableSheet;
import jxl.write.WritableWorkbook;
import jxl.write.WriteException;
import jxl.write.biff.RowsExceededException;

/**
 *
 * @author Maslz
 */
public class GUI extends javax.swing.JFrame {

    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
        this.setLocationRelativeTo(null);
        bt_closefile.setVisible(false);
        this.pack();
        /* setTitle("Stacker");
        setSize(380, 650);
        setDefaultCloseOperation(EXIT_ON_CLOSE);
        setVisible(false);
        setUndecorated(true);
        setVisible(true);
        setResizable(false);
        setVisible(true); // move setVisible to the end*/
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jd_addFile = new javax.swing.JDialog();
        jp_addFile = new javax.swing.JPanel();
        tf_name = new javax.swing.JTextField();
        jl_fileName = new javax.swing.JLabel();
        cb_campos = new javax.swing.JComboBox<>();
        bt_addCampos = new javax.swing.JButton();
        bt_removeCampos = new javax.swing.JButton();
        jb_completeFile = new javax.swing.JButton();
        bt_createFile = new javax.swing.JButton();
        jp_addFileTopBar = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        bt_backtoMain = new javax.swing.JButton();
        bt_edit = new javax.swing.JButton();
        jd_addCampos = new javax.swing.JDialog();
        jPanel2 = new javax.swing.JPanel();
        tf_camposName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        rb_int = new javax.swing.JRadioButton();
        rb_char = new javax.swing.JRadioButton();
        rb_double = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        tf_camposLength = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jl_key = new javax.swing.JLabel();
        chb_key = new javax.swing.JCheckBox();
        jb_addFile1 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        bt_backtoAddFile = new javax.swing.JButton();
        bg_type = new javax.swing.ButtonGroup();
        jd_editCampos = new javax.swing.JDialog();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        bt_backtoAddFile1 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        rb_intEdit = new javax.swing.JRadioButton();
        rb_charEdit = new javax.swing.JRadioButton();
        rb_doubleEdit = new javax.swing.JRadioButton();
        tf_camposNameEdit = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        tf_lengthEdit = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        chb_keyEdit = new javax.swing.JCheckBox();
        jb_addFile2 = new javax.swing.JButton();
        bg_typeEdit = new javax.swing.ButtonGroup();
        jd_fileEDIT = new javax.swing.JDialog();
        jPanel3 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        bt_backtomain = new javax.swing.JButton();
        bt_removereg = new javax.swing.JButton();
        bt_addregistry = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        bt_excel = new javax.swing.JButton();
        bt_search = new javax.swing.JButton();
        jb_listar = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        jt_info = new javax.swing.JTable();
        bt_merge = new javax.swing.JButton();
        jb_index = new javax.swing.JButton();
        jd_search = new javax.swing.JDialog();
        jPanel8 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        tf_search = new javax.swing.JTextField();
        jButton13 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jt_search = new javax.swing.JTable();
        jPanel9 = new javax.swing.JPanel();
        jButton15 = new javax.swing.JButton();
        jButton16 = new javax.swing.JButton();
        bt_backtomain1 = new javax.swing.JButton();
        bt_eliminar = new javax.swing.JButton();
        bt_modificar = new javax.swing.JButton();
        jd_fileadd = new javax.swing.JDialog();
        jPanel12 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jButton22 = new javax.swing.JButton();
        jButton23 = new javax.swing.JButton();
        bt_backtomain3 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jt_info2 = new javax.swing.JTable();
        bt_savereg1 = new javax.swing.JButton();
        bt_addregistry1 = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jd_modificar = new javax.swing.JDialog();
        jPanel10 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        tf_modificar = new javax.swing.JTextField();
        jButton18 = new javax.swing.JButton();
        bt_backtomain4 = new javax.swing.JButton();
        jd_listar = new javax.swing.JDialog();
        jPanel11 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jl_registros2 = new javax.swing.JList<>();
        jd_merge = new javax.swing.JDialog();
        jPanel14 = new javax.swing.JPanel();
        cb_file1 = new javax.swing.JComboBox<>();
        cb_file2 = new javax.swing.JComboBox<>();
        jButton20 = new javax.swing.JButton();
        jButton21 = new javax.swing.JButton();
        jButton24 = new javax.swing.JButton();
        cb_file3 = new javax.swing.JComboBox<>();
        jButton25 = new javax.swing.JButton();
        jButton26 = new javax.swing.JButton();
        jPanel15 = new javax.swing.JPanel();
        jButton12 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        bt_backtomain2 = new javax.swing.JButton();
        jButton17 = new javax.swing.JButton();
        jd_file2Table = new javax.swing.JDialog();
        jPanel16 = new javax.swing.JPanel();
        jPanel17 = new javax.swing.JPanel();
        jButton19 = new javax.swing.JButton();
        jButton27 = new javax.swing.JButton();
        bt_backtomain5 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        mainPanel = new javax.swing.JPanel();
        jb_addFile = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jButton9 = new javax.swing.JButton();
        jl_openfile = new javax.swing.JLabel();
        bt_fileedit = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        bt_closefile = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();

        jd_addFile.setBackground(new java.awt.Color(0, 137, 123));
        jd_addFile.setForeground(new java.awt.Color(0, 137, 123));
        jd_addFile.setUndecorated(true);

        jp_addFile.setBackground(new java.awt.Color(38, 166, 154));

        tf_name.setFont(new java.awt.Font("Gotham Medium", 0, 14)); // NOI18N
        tf_name.setName("File name"); // NOI18N
        tf_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_nameActionPerformed(evt);
            }
        });

        jl_fileName.setFont(new java.awt.Font("Gotham Black", 1, 24)); // NOI18N
        jl_fileName.setForeground(new java.awt.Color(255, 255, 255));
        jl_fileName.setText("File Name");

        chb_key.setVisible(false);
        cb_campos.setFont(new java.awt.Font("Gotham Medium", 0, 14)); // NOI18N
        cb_campos.setVisible(false);

        bt_addCampos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ic_add_circle_white_24dp_1x.png"))); // NOI18N
        bt_addCampos.setBorderPainted(false);
        bt_addCampos.setContentAreaFilled(false);
        bt_addCampos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_addCamposActionPerformed(evt);
            }
        });
        bt_addCampos.setVisible(false);

        bt_removeCampos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ic_remove_circle_white_24dp_1x.png"))); // NOI18N
        bt_removeCampos.setBorderPainted(false);
        bt_removeCampos.setContentAreaFilled(false);
        bt_removeCampos.setVisible(false);
        bt_removeCampos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_removeCamposActionPerformed(evt);
            }
        });

        jb_completeFile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ic_check_circle_white_24dp_2x.png"))); // NOI18N
        jb_completeFile.setBorder(null);
        jb_completeFile.setBorderPainted(false);
        jb_completeFile.setContentAreaFilled(false);
        jb_completeFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_completeFileActionPerformed(evt);
            }
        });
        jb_completeFile.setVisible(false);

        bt_createFile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ic_add_circle_white_24dp_1x.png"))); // NOI18N
        bt_createFile.setBorder(null);
        bt_createFile.setBorderPainted(false);
        bt_createFile.setContentAreaFilled(false);
        bt_createFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_createFileActionPerformed(evt);
            }
        });

        jp_addFileTopBar.setBackground(new java.awt.Color(0, 150, 136));

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ic_clear_white_24dp_1x.png"))); // NOI18N
        jButton3.setBorderPainted(false);
        jButton3.setContentAreaFilled(false);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ic_arrow_drop_down_white_24dp_1x.png"))); // NOI18N
        jButton4.setBorderPainted(false);
        jButton4.setContentAreaFilled(false);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        bt_backtoMain.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ic_forward_white_24dp_1x.png"))); // NOI18N
        bt_backtoMain.setBorderPainted(false);
        bt_backtoMain.setContentAreaFilled(false);
        bt_backtoMain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_backtoMainActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jp_addFileTopBarLayout = new javax.swing.GroupLayout(jp_addFileTopBar);
        jp_addFileTopBar.setLayout(jp_addFileTopBarLayout);
        jp_addFileTopBarLayout.setHorizontalGroup(
            jp_addFileTopBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jp_addFileTopBarLayout.createSequentialGroup()
                .addComponent(bt_backtoMain)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 474, Short.MAX_VALUE)
                .addComponent(jButton4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3))
        );
        jp_addFileTopBarLayout.setVerticalGroup(
            jp_addFileTopBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jp_addFileTopBarLayout.createSequentialGroup()
                .addComponent(bt_backtoMain)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        bt_edit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ic_mode_edit_white_24dp_1x.png"))); // NOI18N
        bt_edit.setBorderPainted(false);
        bt_edit.setContentAreaFilled(false);
        bt_removeCampos.setVisible(false);
        bt_edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_editActionPerformed(evt);
            }
        });
        bt_edit.setVisible(false);

        javax.swing.GroupLayout jp_addFileLayout = new javax.swing.GroupLayout(jp_addFile);
        jp_addFile.setLayout(jp_addFileLayout);
        jp_addFileLayout.setHorizontalGroup(
            jp_addFileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jp_addFileTopBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jp_addFileLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jb_completeFile, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jp_addFileLayout.createSequentialGroup()
                .addGap(163, 163, 163)
                .addGroup(jp_addFileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addGroup(jp_addFileLayout.createSequentialGroup()
                        .addComponent(cb_campos, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bt_addCampos, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(bt_edit, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(9, 9, 9)
                        .addComponent(bt_removeCampos, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jl_fileName)
                    .addGroup(jp_addFileLayout.createSequentialGroup()
                        .addComponent(tf_name, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bt_createFile)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jp_addFileLayout.setVerticalGroup(
            jp_addFileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp_addFileLayout.createSequentialGroup()
                .addComponent(jp_addFileTopBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 128, Short.MAX_VALUE)
                .addComponent(jl_fileName)
                .addGap(51, 51, 51)
                .addGroup(jp_addFileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(bt_createFile)
                    .addComponent(tf_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jp_addFileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(bt_removeCampos)
                    .addComponent(bt_addCampos)
                    .addComponent(bt_edit)
                    .addComponent(cb_campos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(112, 112, 112)
                .addComponent(jb_completeFile, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jd_addFileLayout = new javax.swing.GroupLayout(jd_addFile.getContentPane());
        jd_addFile.getContentPane().setLayout(jd_addFileLayout);
        jd_addFileLayout.setHorizontalGroup(
            jd_addFileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jp_addFile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jd_addFileLayout.setVerticalGroup(
            jd_addFileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jp_addFile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jd_addCampos.setUndecorated(true);

        jPanel2.setBackground(new java.awt.Color(38, 198, 218));

        tf_camposName.setFont(new java.awt.Font("Gotham Medium", 0, 14)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Gotham Bold", 0, 16)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(240, 240, 240));
        jLabel2.setText("Name");

        rb_int.setBackground(new java.awt.Color(255, 255, 255));
        bg_type.add(rb_int);
        rb_int.setFont(new java.awt.Font("Gotham Medium", 0, 14)); // NOI18N
        rb_int.setForeground(new java.awt.Color(255, 255, 255));
        rb_int.setText("int");
        rb_int.setContentAreaFilled(false);
        rb_int.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rb_intActionPerformed(evt);
            }
        });

        rb_char.setBackground(new java.awt.Color(255, 255, 255));
        bg_type.add(rb_char);
        rb_char.setFont(new java.awt.Font("Gotham Medium", 0, 14)); // NOI18N
        rb_char.setForeground(new java.awt.Color(255, 255, 255));
        rb_char.setText("char");
        rb_char.setContentAreaFilled(false);
        rb_char.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rb_charActionPerformed(evt);
            }
        });

        rb_double.setBackground(new java.awt.Color(255, 255, 255));
        bg_type.add(rb_double);
        rb_double.setFont(new java.awt.Font("Gotham Medium", 0, 14)); // NOI18N
        rb_double.setForeground(new java.awt.Color(255, 255, 255));
        rb_double.setText("double");
        rb_double.setContentAreaFilled(false);
        rb_double.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rb_doubleActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Gotham Bold", 0, 16)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(240, 240, 240));
        jLabel3.setText("Type");

        tf_camposLength.setFont(new java.awt.Font("Gotham Medium", 0, 14)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Gotham Bold", 0, 16)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(240, 240, 240));
        jLabel4.setText("Length");

        jl_key.setFont(new java.awt.Font("Gotham Bold", 0, 16)); // NOI18N
        jl_key.setForeground(new java.awt.Color(240, 240, 240));
        jl_key.setText("Key");
        jl_key.setVisible(false);

        chb_key.setContentAreaFilled(false);
        chb_key.setVisible(false);

        jb_addFile1.setForeground(new java.awt.Color(255, 255, 255));
        jb_addFile1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ic_add_circle_white_24dp_2x.png"))); // NOI18N
        jb_addFile1.setBorder(null);
        jb_addFile1.setBorderPainted(false);
        jb_addFile1.setContentAreaFilled(false);
        jb_addFile1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_addFile1ActionPerformed(evt);
            }
        });

        jPanel4.setBackground(new java.awt.Color(0, 188, 212));

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ic_clear_white_24dp_1x.png"))); // NOI18N
        jButton5.setBorderPainted(false);
        jButton5.setContentAreaFilled(false);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ic_arrow_drop_down_white_24dp_1x.png"))); // NOI18N
        jButton6.setBorderPainted(false);
        jButton6.setContentAreaFilled(false);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        bt_backtoAddFile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ic_forward_white_24dp_1x.png"))); // NOI18N
        bt_backtoAddFile.setBorderPainted(false);
        bt_backtoAddFile.setContentAreaFilled(false);
        bt_backtoAddFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_backtoAddFileActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addComponent(bt_backtoAddFile)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 474, Short.MAX_VALUE)
                .addComponent(jButton6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton5))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(bt_backtoAddFile))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(170, 170, 170)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jl_key, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(chb_key)
                    .addComponent(rb_char, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rb_double, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rb_int, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf_camposLength)
                    .addComponent(tf_camposName, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jb_addFile1)
                .addGap(18, 18, 18))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 105, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(tf_camposName, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rb_int)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(rb_double)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rb_char)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(tf_camposLength, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jl_key)
                    .addComponent(chb_key))
                .addGap(81, 81, 81)
                .addComponent(jb_addFile1)
                .addGap(20, 20, 20))
        );

        javax.swing.GroupLayout jd_addCamposLayout = new javax.swing.GroupLayout(jd_addCampos.getContentPane());
        jd_addCampos.getContentPane().setLayout(jd_addCamposLayout);
        jd_addCamposLayout.setHorizontalGroup(
            jd_addCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jd_addCamposLayout.setVerticalGroup(
            jd_addCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jd_editCampos.setUndecorated(true);

        jPanel5.setBackground(new java.awt.Color(120, 144, 156));

        jPanel6.setBackground(new java.awt.Color(96, 125, 139));

        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ic_clear_white_24dp_1x.png"))); // NOI18N
        jButton7.setBorderPainted(false);
        jButton7.setContentAreaFilled(false);
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ic_arrow_drop_down_white_24dp_1x.png"))); // NOI18N
        jButton8.setBorderPainted(false);
        jButton8.setContentAreaFilled(false);
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        bt_backtoAddFile1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ic_forward_white_24dp_1x.png"))); // NOI18N
        bt_backtoAddFile1.setBorderPainted(false);
        bt_backtoAddFile1.setContentAreaFilled(false);
        bt_backtoAddFile1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_backtoAddFile1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addComponent(bt_backtoAddFile1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 474, Short.MAX_VALUE)
                .addComponent(jButton8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton7))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(bt_backtoAddFile1)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jLabel6.setFont(new java.awt.Font("Gotham Bold", 0, 16)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(240, 240, 240));
        jLabel6.setText("Name");

        rb_intEdit.setBackground(new java.awt.Color(255, 255, 255));
        bg_typeEdit.add(rb_intEdit);
        rb_intEdit.setFont(new java.awt.Font("Gotham Medium", 0, 14)); // NOI18N
        rb_intEdit.setForeground(new java.awt.Color(255, 255, 255));
        rb_intEdit.setText("int");
        rb_intEdit.setContentAreaFilled(false);

        rb_charEdit.setBackground(new java.awt.Color(255, 255, 255));
        bg_typeEdit.add(rb_charEdit);
        rb_charEdit.setFont(new java.awt.Font("Gotham Medium", 0, 14)); // NOI18N
        rb_charEdit.setForeground(new java.awt.Color(255, 255, 255));
        rb_charEdit.setText("char");
        rb_charEdit.setContentAreaFilled(false);

        rb_doubleEdit.setBackground(new java.awt.Color(255, 255, 255));
        bg_typeEdit.add(rb_doubleEdit);
        rb_doubleEdit.setFont(new java.awt.Font("Gotham Medium", 0, 14)); // NOI18N
        rb_doubleEdit.setForeground(new java.awt.Color(255, 255, 255));
        rb_doubleEdit.setText("double");
        rb_doubleEdit.setContentAreaFilled(false);

        tf_camposNameEdit.setFont(new java.awt.Font("Gotham Medium", 0, 14)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Gotham Bold", 0, 16)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(240, 240, 240));
        jLabel7.setText("Type");

        tf_lengthEdit.setFont(new java.awt.Font("Gotham Medium", 0, 14)); // NOI18N

        jLabel8.setFont(new java.awt.Font("Gotham Bold", 0, 16)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(240, 240, 240));
        jLabel8.setText("Length");

        jLabel9.setFont(new java.awt.Font("Gotham Bold", 0, 16)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(240, 240, 240));
        jLabel9.setText("Key");

        bg_type.add(chb_keyEdit);
        chb_keyEdit.setContentAreaFilled(false);
        chb_key.setVisible(true);

        jb_addFile2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ic_mode_edit_white_24dp_2x.png"))); // NOI18N
        jb_addFile2.setBorder(null);
        jb_addFile2.setBorderPainted(false);
        jb_addFile2.setContentAreaFilled(false);
        jb_addFile2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_addFile2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(jb_addFile2)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(rb_doubleEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rb_intEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rb_charEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chb_keyEdit)
                            .addComponent(tf_camposNameEdit)
                            .addComponent(tf_lengthEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(175, 175, 175))))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 112, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6)
                    .addComponent(tf_camposNameEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rb_intEdit)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(rb_doubleEdit)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rb_charEdit)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel8)
                    .addComponent(tf_lengthEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(chb_keyEdit)
                    .addComponent(jLabel9))
                .addGap(88, 88, 88)
                .addComponent(jb_addFile2)
                .addContainerGap())
        );

        javax.swing.GroupLayout jd_editCamposLayout = new javax.swing.GroupLayout(jd_editCampos.getContentPane());
        jd_editCampos.getContentPane().setLayout(jd_editCamposLayout);
        jd_editCamposLayout.setHorizontalGroup(
            jd_editCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jd_editCamposLayout.setVerticalGroup(
            jd_editCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jd_fileEDIT.setUndecorated(true);

        jPanel3.setBackground(new java.awt.Color(0, 102, 153));

        jPanel7.setBackground(new java.awt.Color(0, 86, 138));

        jButton10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ic_clear_white_24dp_1x.png"))); // NOI18N
        jButton10.setBorderPainted(false);
        jButton10.setContentAreaFilled(false);
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ic_arrow_drop_down_white_24dp_1x.png"))); // NOI18N
        jButton11.setBorderPainted(false);
        jButton11.setContentAreaFilled(false);
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        bt_backtomain.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ic_forward_white_24dp_1x.png"))); // NOI18N
        bt_backtomain.setBorderPainted(false);
        bt_backtomain.setContentAreaFilled(false);
        bt_backtomain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_backtomainActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addComponent(bt_backtomain)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton10)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jButton10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jButton11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(bt_backtomain)
        );

        bt_removereg.setBackground(new java.awt.Color(255, 255, 255));
        bt_removereg.setFont(new java.awt.Font("Gotham Medium", 0, 13)); // NOI18N
        bt_removereg.setForeground(new java.awt.Color(0, 102, 153));
        bt_removereg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ic_remove_circle_white_24dp_1x.png"))); // NOI18N
        bt_removereg.setBorderPainted(false);
        bt_removereg.setContentAreaFilled(false);
        bt_removereg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_removeregActionPerformed(evt);
            }
        });

        bt_addregistry.setBackground(new java.awt.Color(255, 255, 255));
        bt_addregistry.setFont(new java.awt.Font("Gotham Medium", 0, 13)); // NOI18N
        bt_addregistry.setForeground(new java.awt.Color(255, 255, 255));
        bt_addregistry.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ic_add_circle_white_36dp_1x.png"))); // NOI18N
        bt_addregistry.setBorderPainted(false);
        bt_addregistry.setContentAreaFilled(false);
        bt_addregistry.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bt_addregistry.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        bt_addregistry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_addregistryActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Gotham Bold", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("R E G I S T R O S ");

        bt_excel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Excel Material.png"))); // NOI18N
        bt_excel.setBorderPainted(false);
        bt_excel.setContentAreaFilled(false);
        bt_excel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_excelActionPerformed(evt);
            }
        });

        bt_search.setFont(new java.awt.Font("Gotham Medium", 0, 12)); // NOI18N
        bt_search.setForeground(new java.awt.Color(255, 255, 255));
        bt_search.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons8-find-user-female-48.png"))); // NOI18N
        bt_search.setText("S E A R C H");
        bt_search.setBorderPainted(false);
        bt_search.setContentAreaFilled(false);
        bt_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_searchActionPerformed(evt);
            }
        });

        jb_listar.setFont(new java.awt.Font("Gotham Medium", 0, 12)); // NOI18N
        jb_listar.setForeground(new java.awt.Color(255, 255, 255));
        jb_listar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Main/ic_view_list_white_36dp_1x.png"))); // NOI18N
        jb_listar.setText("L I S T");
        jb_listar.setBorderPainted(false);
        jb_listar.setContentAreaFilled(false);
        jb_listar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jb_listar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jb_listar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_listarActionPerformed(evt);
            }
        });

        jt_info.setFont(new java.awt.Font("Gotham Medium", 0, 14)); // NOI18N
        jt_info.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jt_info.setGridColor(new java.awt.Color(0, 102, 153));
        jt_info.setSelectionBackground(new java.awt.Color(0, 102, 153));
        jScrollPane6.setViewportView(jt_info);

        bt_merge.setFont(new java.awt.Font("Gotham Medium", 0, 12)); // NOI18N
        bt_merge.setForeground(new java.awt.Color(255, 255, 255));
        bt_merge.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ic_merge_type_white_36dp_1x.png"))); // NOI18N
        bt_merge.setText("M E R G E");
        bt_merge.setBorderPainted(false);
        bt_merge.setContentAreaFilled(false);
        bt_merge.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bt_merge.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        bt_merge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_mergeActionPerformed(evt);
            }
        });

        jb_index.setText("Index");
        jb_index.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_indexActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap(70, Short.MAX_VALUE)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(bt_removereg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bt_addregistry, javax.swing.GroupLayout.DEFAULT_SIZE, 84, Short.MAX_VALUE)
                            .addComponent(jb_index, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(bt_excel, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bt_search)
                        .addGap(50, 50, 50)
                        .addComponent(jb_listar, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bt_merge, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(244, 244, 244))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 141, Short.MAX_VALUE)
                        .addComponent(jb_index)
                        .addGap(67, 67, 67)
                        .addComponent(bt_removereg)
                        .addGap(68, 68, 68)
                        .addComponent(bt_addregistry))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(bt_search, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jb_listar)
                    .addComponent(bt_merge)
                    .addComponent(bt_excel))
                .addGap(27, 27, 27))
        );

        javax.swing.GroupLayout jd_fileEDITLayout = new javax.swing.GroupLayout(jd_fileEDIT.getContentPane());
        jd_fileEDIT.getContentPane().setLayout(jd_fileEDITLayout);
        jd_fileEDITLayout.setHorizontalGroup(
            jd_fileEDITLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jd_fileEDITLayout.setVerticalGroup(
            jd_fileEDITLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jd_search.setUndecorated(true);

        jPanel8.setBackground(new java.awt.Color(0, 102, 153));

        jLabel5.setFont(new java.awt.Font("Gotham Bold", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("B U S Q U E D A");

        tf_search.setBackground(new java.awt.Color(255, 255, 255));
        tf_search.setFont(new java.awt.Font("Gotham Medium", 0, 14)); // NOI18N
        tf_search.setForeground(new java.awt.Color(0, 0, 0));
        tf_search.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tf_search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tf_searchKeyPressed(evt);
            }
        });

        jButton13.setBackground(new java.awt.Color(255, 255, 255));
        jButton13.setFont(new java.awt.Font("Gotham Medium", 0, 14)); // NOI18N
        jButton13.setForeground(new java.awt.Color(255, 255, 255));
        jButton13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ic_search_white_36dp_1x.png"))); // NOI18N
        jButton13.setBorderPainted(false);
        jButton13.setContentAreaFilled(false);
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        jt_search.setFont(new java.awt.Font("Gotham Medium", 0, 12)); // NOI18N
        jt_search.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(jt_search);

        jPanel9.setBackground(new java.awt.Color(0, 86, 138));

        jButton15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ic_clear_white_24dp_1x.png"))); // NOI18N
        jButton15.setBorderPainted(false);
        jButton15.setContentAreaFilled(false);
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });

        jButton16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ic_arrow_drop_down_white_24dp_1x.png"))); // NOI18N
        jButton16.setBorderPainted(false);
        jButton16.setContentAreaFilled(false);
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });

        bt_backtomain1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ic_forward_white_24dp_1x.png"))); // NOI18N
        bt_backtomain1.setBorderPainted(false);
        bt_backtomain1.setContentAreaFilled(false);
        bt_backtomain1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_backtomain1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addComponent(bt_backtomain1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton15)
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jButton15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jButton16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(bt_backtomain1)
        );

        bt_eliminar.setFont(new java.awt.Font("Gotham Medium", 0, 12)); // NOI18N
        bt_eliminar.setText("E L I M I N A R");
        bt_eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_eliminarActionPerformed(evt);
            }
        });

        bt_modificar.setFont(new java.awt.Font("Gotham Medium", 0, 12)); // NOI18N
        bt_modificar.setText("M O D I F I C A R");
        bt_modificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_modificarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(130, 130, 130)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(bt_modificar)
                                .addGap(94, 94, 94)
                                .addComponent(bt_eliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(tf_search, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(17, 17, 17)
                                .addComponent(jButton13))
                            .addComponent(jLabel5)))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 523, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(34, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jLabel5)
                .addGap(49, 49, 49)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf_search, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(60, 60, 60)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 71, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bt_eliminar)
                    .addComponent(bt_modificar))
                .addGap(49, 49, 49))
        );

        javax.swing.GroupLayout jd_searchLayout = new javax.swing.GroupLayout(jd_search.getContentPane());
        jd_search.getContentPane().setLayout(jd_searchLayout);
        jd_searchLayout.setHorizontalGroup(
            jd_searchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jd_searchLayout.setVerticalGroup(
            jd_searchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jd_fileadd.setUndecorated(true);

        jPanel12.setBackground(new java.awt.Color(0, 102, 153));

        jPanel13.setBackground(new java.awt.Color(0, 86, 138));

        jButton22.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ic_clear_white_24dp_1x.png"))); // NOI18N
        jButton22.setBorderPainted(false);
        jButton22.setContentAreaFilled(false);
        jButton22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton22ActionPerformed(evt);
            }
        });

        jButton23.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ic_arrow_drop_down_white_24dp_1x.png"))); // NOI18N
        jButton23.setBorderPainted(false);
        jButton23.setContentAreaFilled(false);
        jButton23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton23ActionPerformed(evt);
            }
        });

        bt_backtomain3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ic_forward_white_24dp_1x.png"))); // NOI18N
        bt_backtomain3.setBorderPainted(false);
        bt_backtomain3.setContentAreaFilled(false);
        bt_backtomain3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_backtomain3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                .addComponent(bt_backtomain3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton23)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton22)
                .addContainerGap())
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jButton22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jButton23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(bt_backtomain3)
        );

        jt_info2.setFont(new java.awt.Font("Gotham Medium", 0, 14)); // NOI18N
        jt_info2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jt_info2.setGridColor(new java.awt.Color(0, 102, 153));
        jt_info2.setSelectionBackground(new java.awt.Color(0, 102, 153));
        jScrollPane3.setViewportView(jt_info2);

        bt_savereg1.setBackground(new java.awt.Color(255, 255, 255));
        bt_savereg1.setFont(new java.awt.Font("Gotham Medium", 0, 13)); // NOI18N
        bt_savereg1.setForeground(new java.awt.Color(0, 102, 153));
        bt_savereg1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ic_check_circle_white_24dp_2x.png"))); // NOI18N
        bt_savereg1.setBorderPainted(false);
        bt_savereg1.setContentAreaFilled(false);
        bt_savereg1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_savereg1ActionPerformed(evt);
            }
        });

        bt_addregistry1.setBackground(new java.awt.Color(255, 255, 255));
        bt_addregistry1.setFont(new java.awt.Font("Gotham Medium", 0, 13)); // NOI18N
        bt_addregistry1.setForeground(new java.awt.Color(0, 102, 153));
        bt_addregistry1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ic_add_circle_white_36dp_1x.png"))); // NOI18N
        bt_addregistry1.setBorderPainted(false);
        bt_addregistry1.setContentAreaFilled(false);
        bt_addregistry1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_addregistry1ActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Gotham Bold", 0, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("A G R E G A R   R E G I S T R O S ");

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(153, 153, 153)
                .addComponent(jLabel14)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(0, 63, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(bt_savereg1, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bt_addregistry1, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(bt_addregistry1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bt_savereg1)
                .addGap(25, 25, 25))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                .addGap(0, 145, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(114, 114, 114))
        );

        javax.swing.GroupLayout jd_fileaddLayout = new javax.swing.GroupLayout(jd_fileadd.getContentPane());
        jd_fileadd.getContentPane().setLayout(jd_fileaddLayout);
        jd_fileaddLayout.setHorizontalGroup(
            jd_fileaddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jd_fileaddLayout.setVerticalGroup(
            jd_fileaddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane4.setViewportView(jList1);

        jLabel15.setText("RRN Registro");

        tf_modificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_modificarActionPerformed(evt);
            }
        });

        jButton18.setText("modificar");
        jButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton18ActionPerformed(evt);
            }
        });

        bt_backtomain4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ic_forward_white_24dp_1x.png"))); // NOI18N
        bt_backtomain4.setBorderPainted(false);
        bt_backtomain4.setContentAreaFilled(false);
        bt_backtomain4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_backtomain4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(jLabel15)
                .addGap(58, 58, 58)
                .addComponent(tf_modificar, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addComponent(jButton18)
                .addGap(51, 51, 51))
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addComponent(bt_backtomain4)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addComponent(bt_backtomain4)
                .addGap(46, 46, 46)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(tf_modificar, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton18))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jd_modificarLayout = new javax.swing.GroupLayout(jd_modificar.getContentPane());
        jd_modificar.getContentPane().setLayout(jd_modificarLayout);
        jd_modificarLayout.setHorizontalGroup(
            jd_modificarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_modificarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jd_modificarLayout.setVerticalGroup(
            jd_modificarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_modificarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jScrollPane5.setViewportView(jl_registros2);

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 526, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(57, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(104, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jd_listarLayout = new javax.swing.GroupLayout(jd_listar.getContentPane());
        jd_listar.getContentPane().setLayout(jd_listarLayout);
        jd_listarLayout.setHorizontalGroup(
            jd_listarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_listarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jd_listarLayout.setVerticalGroup(
            jd_listarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_listarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel14.setBackground(new java.awt.Color(255, 202, 40));
        jPanel14.setForeground(new java.awt.Color(255, 202, 40));

        jButton20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ic_add_circle_white_24dp_1x.png"))); // NOI18N
        jButton20.setBorderPainted(false);
        jButton20.setOpaque(false);
        jButton20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton20ActionPerformed(evt);
            }
        });

        jButton21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ic_folder_white_36dp_2x.png"))); // NOI18N
        jButton21.setBorderPainted(false);
        jButton21.setContentAreaFilled(false);
        jButton21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton21ActionPerformed(evt);
            }
        });

        jButton24.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ic_add_circle_white_24dp_1x.png"))); // NOI18N
        jButton24.setBorderPainted(false);
        jButton24.setOpaque(false);
        jButton24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton24ActionPerformed(evt);
            }
        });

        jButton25.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ic_remove_circle_white_24dp_1x.png"))); // NOI18N
        jButton25.setBorderPainted(false);
        jButton25.setOpaque(false);
        jButton25.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton25ActionPerformed(evt);
            }
        });

        jButton26.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ic_check_circle_white_24dp_1x.png"))); // NOI18N
        jButton26.setBorderPainted(false);
        jButton26.setOpaque(false);
        jButton26.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton26ActionPerformed(evt);
            }
        });

        jPanel15.setBackground(new java.awt.Color(255, 193, 7));

        jButton12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ic_clear_white_24dp_1x.png"))); // NOI18N
        jButton12.setBorderPainted(false);
        jButton12.setContentAreaFilled(false);
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jButton14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ic_arrow_drop_down_white_24dp_1x.png"))); // NOI18N
        jButton14.setBorderPainted(false);
        jButton14.setContentAreaFilled(false);
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        bt_backtomain2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ic_forward_white_24dp_1x.png"))); // NOI18N
        bt_backtomain2.setBorderPainted(false);
        bt_backtomain2.setContentAreaFilled(false);
        bt_backtomain2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_backtomain2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel15Layout.createSequentialGroup()
                .addComponent(bt_backtomain2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton12))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jButton12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jButton14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(bt_backtomain2)
        );

        jButton17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Main/ic_view_list_white_36dp_1x.png"))); // NOI18N
        jButton17.setBorderPainted(false);
        jButton17.setOpaque(false);
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jButton20)
                    .addComponent(cb_file1, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(cb_file3, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addComponent(jButton25)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton26))
                    .addComponent(jButton17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jButton24)
                    .addComponent(cb_file2, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .addComponent(jPanel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addGroup(jPanel14Layout.createSequentialGroup()
                                .addComponent(cb_file2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton24))
                            .addGroup(jPanel14Layout.createSequentialGroup()
                                .addComponent(cb_file1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton20))))
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jButton21, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton17)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                .addComponent(cb_file3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton25)
                    .addComponent(jButton26))
                .addGap(19, 19, 19))
        );

        javax.swing.GroupLayout jd_mergeLayout = new javax.swing.GroupLayout(jd_merge.getContentPane());
        jd_merge.getContentPane().setLayout(jd_mergeLayout);
        jd_mergeLayout.setHorizontalGroup(
            jd_mergeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jd_mergeLayout.setVerticalGroup(
            jd_mergeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel16.setBackground(new java.awt.Color(255, 202, 40));

        jPanel17.setBackground(new java.awt.Color(255, 193, 7));

        jButton19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ic_clear_white_24dp_1x.png"))); // NOI18N
        jButton19.setBorderPainted(false);
        jButton19.setContentAreaFilled(false);
        jButton19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton19ActionPerformed(evt);
            }
        });

        jButton27.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ic_arrow_drop_down_white_24dp_1x.png"))); // NOI18N
        jButton27.setBorderPainted(false);
        jButton27.setContentAreaFilled(false);
        jButton27.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton27ActionPerformed(evt);
            }
        });

        bt_backtomain5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ic_forward_white_24dp_1x.png"))); // NOI18N
        bt_backtomain5.setBorderPainted(false);
        bt_backtomain5.setContentAreaFilled(false);
        bt_backtomain5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_backtomain5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel17Layout.createSequentialGroup()
                .addComponent(bt_backtomain5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 501, Short.MAX_VALUE)
                .addComponent(jButton27)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton19))
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jButton19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jButton27, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(bt_backtomain5)
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 10, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jd_file2TableLayout = new javax.swing.GroupLayout(jd_file2Table.getContentPane());
        jd_file2Table.getContentPane().setLayout(jd_file2TableLayout);
        jd_file2TableLayout.setHorizontalGroup(
            jd_file2TableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jd_file2TableLayout.setVerticalGroup(
            jd_file2TableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(null);
        setUndecorated(true);

        mainPanel.setBackground(new java.awt.Color(0, 102, 102));
        mainPanel.setPreferredSize(new java.awt.Dimension(960, 540));

        jb_addFile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ic_add_circle_white_36dp_2x.png"))); // NOI18N
        jb_addFile.setBorderPainted(false);
        jb_addFile.setContentAreaFilled(false);
        jb_addFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_addFileActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(0, 88, 99));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ic_clear_white_24dp_1x.png"))); // NOI18N
        jButton1.setBorderPainted(false);
        jButton1.setContentAreaFilled(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ic_arrow_drop_down_white_24dp_1x.png"))); // NOI18N
        jButton2.setBorderPainted(false);
        jButton2.setContentAreaFilled(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jLabel10.setFont(new java.awt.Font("Gotham Black", 1, 36)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("W E L C O M E");

        jButton9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ic_folder_white_36dp_2x.png"))); // NOI18N
        jButton9.setBorderPainted(false);
        jButton9.setContentAreaFilled(false);
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jl_openfile.setFont(new java.awt.Font("Gotham Bold", 0, 20)); // NOI18N
        jl_openfile.setForeground(new java.awt.Color(255, 255, 255));
        jl_openfile.setText("<no opened file>");

        bt_fileedit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ic_edit_white_24dp_2x.png"))); // NOI18N
        bt_fileedit.setBorderPainted(false);
        bt_fileedit.setContentAreaFilled(false);
        bt_fileedit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_fileeditActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Gotham Medium", 0, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("O P E N   F I L E ");

        jLabel13.setFont(new java.awt.Font("Gotham Medium", 0, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("C R E A T E   F I L E ");

        bt_closefile.setFont(new java.awt.Font("Gotham Medium", 0, 14)); // NOI18N
        bt_closefile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ic_add_circle_white_18dp_2x.png"))); // NOI18N
        bt_closefile.setBorderPainted(false);
        bt_closefile.setContentAreaFilled(false);
        bt_closefile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_closefileActionPerformed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Gotham Medium", 0, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("E D I T   F I L E ");

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGap(233, 233, 233)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel10)
                    .addComponent(jl_openfile)
                    .addComponent(bt_closefile, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                .addGap(459, 459, 459)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jb_addFile, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(bt_fileedit, javax.swing.GroupLayout.PREFERRED_SIZE, 70, Short.MAX_VALUE))
                .addGap(38, 38, 38))
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(80, 80, 80)
                .addComponent(jLabel10)
                .addGap(52, 52, 52)
                .addComponent(jl_openfile)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bt_closefile, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(66, 66, 66)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bt_fileedit, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jb_addFile, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(53, 53, 53))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 722, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 593, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jb_addFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_addFileActionPerformed
        jd_addFile.pack();
        jd_addFile.setLocationRelativeTo(null);
        mainPanel.setEnabled(false);
        jd_addFile.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jb_addFileActionPerformed

    private void jb_addFile1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_addFile1ActionPerformed
        rb_int.setActionCommand("int");
        rb_double.setActionCommand("double");
        rb_char.setActionCommand("char");

        jd_addCampos.setVisible(false);
        boolean key;
        String type = bg_type.getSelection().getActionCommand();

        if (chb_key.isSelected() && !hasKey) {
            key = true;
            hasKey = true;
        } else {
            key = false;
        }
        Campos c = new Campos(tf_camposName.getText(), type, Integer.parseInt(tf_camposLength.getText()), key);
        c.setType(type);
        archivo.addCampo(c);
        // jd_addFile.setVisible(true);
        //Talvez haya una manera m[as eficiente de hacer esto
        cb_campos.removeAllItems();
        for (int i = 0; i < archivo.getCampos().size(); i++) {
            cb_campos.addItem(archivo.getCampos().get(i).getName());
        }
        tf_camposLength.setText("");
        tf_camposName.setText("");
        if (rb_int.isSelected()) {
            rb_int.setSelected(false);
        } else if (rb_double.isSelected()) {
            rb_double.setSelected(false);
        } else if (rb_char.isSelected()) {
            rb_char.setSelected(false);
        }
        if (chb_key.isSelected()) {
            chb_key.setSelected(false);
        }
        chb_key.setVisible(false);
        jl_key.setVisible(false);
    }//GEN-LAST:event_jb_addFile1ActionPerformed

    private void bt_backtoAddFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_backtoAddFileActionPerformed
        jd_addCampos.dispose();
        jd_addFile.setVisible(true);
    }//GEN-LAST:event_bt_backtoAddFileActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        int p = JOptionPane.showConfirmDialog(this, "Are you sure you want to quit?");
        if (p == 0) {
            System.exit(0);
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        this.setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        exit();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        this.setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_jButton8ActionPerformed

    private void bt_backtoAddFile1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_backtoAddFile1ActionPerformed
        jd_editCampos.dispose();
        jd_addFile.setVisible(true);
    }//GEN-LAST:event_bt_backtoAddFile1ActionPerformed

    private void jb_addFile2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_addFile2ActionPerformed
        // TODO add your handling code here:
        jd_editCampos.setVisible(false);
        /*boolean key;
        if (chb_key.isSelected()) {
            key = true;
        } else {
            key = false;
        }*/
        int position = 0;
        for (int i = 0; i < archivo.getCampos().size(); i++) {
            if (archivo.getCampos().get(i) == tempCamp) {
                position = i;
            }
        }
        archivo.getCampos().get(position).setName(tf_camposNameEdit.getText());
        archivo.getCampos().get(position).setType(bg_typeEdit.getSelection().toString());
        archivo.getCampos().get(position).setLength(Integer.parseInt(tf_lengthEdit.getText()));
        archivo.getCampos().get(position).setKey(chb_keyEdit.isSelected());
        try {
            archivo.save();

        } catch (IOException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        //tempCamp.setName(tf_camposLenght.getText());
        //tempCamp.setType(bg_typeEdit.getSelection().toString());
    }//GEN-LAST:event_jb_addFile2ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:

        archivo = new Archivos();
        Archivos file = new Archivos();
        String path = load();
        try {
            file = archivo.read(path);
            BufferedReader br = new BufferedReader(new FileReader(path));
            String header = br.readLine();

            //System.out.println("tamano header: " + header.length());
            file.setHeaderSize(header.length() + 1);
            int tamanoReg = 0;
            //System.out.println("campos size: " + file.getCampos().size());
            for (int i = 0; i < file.getCampos().size(); i++) {
                tamanoReg += file.getCampos().get(i).getLength();
            }

            tamanoReg += (file.getCampos().size() - 1) + 1;//se le agregan la cantidad de delimitadores y el byte del salto de linea
            System.out.println("tamano registro: " + tamanoReg);
            file.setTamanoReg(tamanoReg);
            br.close();
        } catch (IOException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        filename = file.getName();
        archivo = file;
        System.out.println(archivo.getName());
        model = new DefaultTableModel();
        archivo.setName(filename.substring(0, filename.length() - 4));
        jl_openfile.setText(filename.substring(0, filename.length() - 4));
        bt_closefile.setVisible(true);

        try {
            Indexar();
        } catch (Exception e) {

        }

        /*
        try {
            //cargarIndexFile();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }*/
    }//GEN-LAST:event_jButton9ActionPerformed

    private void bt_fileeditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_fileeditActionPerformed

        /*CrearArchivo ca = new CrearArchivo();
        try {
            ca.crearArchivos(archivo);
        } catch (IOException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }*/
        model = new DefaultTableModel();
        model2 = new DefaultTableModel();
        model3 = new DefaultTableModel();

        if (archivo != null) {
            /*try {
                // TODO add your handling code here:
                listarRegistros();
            } catch (IOException ex) {
                System.out.println("no hay registros disponibles para listar");
                Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
            }*/
            archivo.setTree(new BTree());
            keyColumn = 0;

            jd_fileEDIT.pack();
            jd_fileEDIT.setLocationRelativeTo(null);
            mainPanel.setEnabled(false);
            jd_fileEDIT.setVisible(true);
            this.setVisible(false);
            registrosAvailable.clear();
            archivo.getLlaves().clear();

            for (int i = 0; i < archivo.getCampos().size(); i++) {
                String str = archivo.getCampos().get(i).getName();
                if (archivo.getCampos().get(i).isKey()) {
                    keyColumn = i;
                }
                model.addColumn(str);
                model2.addColumn(str);

            }

            int k = 0;
            if (!archivo.getRegistros().isEmpty()) {

                for (int i = 0; i < archivo.getRegistros().size(); i++) {
                    String str = archivo.getRegistros().get(i);

                    StringTokenizer tok = new StringTokenizer(str, "|", false);
                    String firstTok = tok.nextToken();

                    if (firstTok.charAt(0) != '@') {
                        //System.out.println("no esta eliminado");
                        registrosAvailable.add(str);
                        Object[] rowData = null;
                        model.addRow(rowData);
                        for (int j = 0; j < model.getColumnCount(); j++) {
                            if (archivo.getCampos().get(j).isKey()) {
                                keyColumn = j;
                            }
                            if (tok.hasMoreTokens()) {
                                if (j == 0) {
                                    if (j == keyColumn) {
                                        archivo.addLlave(Integer.parseInt(firstTok.replaceAll("\\*", "")));
                                    }
                                    model.setValueAt(firstTok.replaceAll("\\*", ""), i - k, j);
                                } else {
                                    String tok3 = tok.nextToken();
                                    if (j == keyColumn) {
                                        archivo.addLlave(Integer.parseInt(tok3.replaceAll("\\*", "")));
                                    }
                                    model.setValueAt(tok3.replaceAll("\\*", ""), i - k, j);
                                }
                            }
                        }
                    } else {
                        //System.out.println("eliminado");
                        k++;
                    }

                }

            }
            jt_info.setModel(model);
            lastRow = model.getRowCount();
            System.out.println(archivo.getLlaves());
            archivo.printTree(registrosAvailable);

            // archivo.llenarTree(registrosAvailable);
        } else {
            JOptionPane.showMessageDialog(null, "Please open a file");
        }

    }//GEN-LAST:event_bt_fileeditActionPerformed

    private void bt_editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_editActionPerformed
        if (cb_campos.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(this, "You haven't selected anything");
        } else {
            jd_editCampos.pack();
            jd_editCampos.setLocationRelativeTo(null);
            jd_editCampos.setVisible(true);
            String cName = cb_campos.getSelectedItem().toString();
            tempCamp = null;
            for (int i = 0; i < archivo.getCampos().size(); i++) {
                if (archivo.getCampos().get(i).getName().equals(cName)) {
                    tempCamp = archivo.getCampos().get(i);
                }
            }
            jd_editCampos.setVisible(true);
            jd_addCampos.setVisible(false);
            if (tempCamp != null) {
                tf_camposNameEdit.setText(tempCamp.getName());
                if (tempCamp.getType() == "int") {
                    rb_intEdit.setSelected(true);
                } else if (tempCamp.getType() == "char") {
                    rb_charEdit.setSelected(true);
                } else if (tempCamp.getType() == "double") {
                    rb_doubleEdit.setSelected(true);
                }
                tf_lengthEdit.setText(Integer.toString(tempCamp.getLength()));
                if (tempCamp.isKey()) {
                    chb_keyEdit.setSelected(true);
                }
            }
        }
    }//GEN-LAST:event_bt_editActionPerformed

    private void bt_backtoMainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_backtoMainActionPerformed
        jd_addFile.dispose();
        this.setVisible(true);
    }//GEN-LAST:event_bt_backtoMainActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        this.setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        exit();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void bt_createFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_createFileActionPerformed
        archivo = new Archivos(tf_name.getText());
        jb_completeFile.setVisible(true);
        cb_campos.setVisible(true);
        bt_addCampos.setVisible(true);
        bt_removeCampos.setVisible(true);
        bt_edit.setVisible(true);
        tf_name.setVisible(false);
        bt_createFile.setVisible(false);
        jl_fileName.setText(archivo.getName());
        jd_addFile.pack();
        jd_addFile.setLocationRelativeTo(null);
        try {
            archivo.save();
        } catch (IOException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_bt_createFileActionPerformed

    private void jb_completeFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_completeFileActionPerformed

        try {
            if (hasKey) {
                cb_campos.setVisible(false);
                bt_addCampos.setVisible(false);
                bt_removeCampos.setVisible(false);
                bt_edit.setVisible(false);
                jl_fileName.setText("FILE NAME");
                jl_fileName.setVisible(true);
                bt_createFile.setVisible(true);
                tf_name.setVisible(true);
                jd_addFile.dispose();
                archivo.save();
                archivo.saveXML();
                this.setVisible(true);

                File f = new File("./Archivos/" + archivo.getName() + ".avail");
                File f2 = new File("./Archivos/" + archivo.getName() + ".ind");
                BufferedWriter bw = new BufferedWriter(new FileWriter(f));
                BufferedWriter bw2 = new BufferedWriter(new FileWriter(f2));
                bw2.close();
                bw.append("-1   ,");
                bw.close();
                
                CrearArchivoCiudad ca = new CrearArchivoCiudad();
                ca.crear(archivo.getName());

            } else {
                JOptionPane.showMessageDialog(jd_fileEDIT, "No key has been selected");
            }

        } catch (IOException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jb_completeFileActionPerformed

    private void bt_removeCamposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_removeCamposActionPerformed
        int index = cb_campos.getSelectedIndex();
        System.out.println("index: " + index);
        if (index >= 0) {
            if (archivo.getCampos().get(index).isKey()) {
                hasKey = false;
            }
            archivo.getCampos().remove(index);
            /*DefaultComboBoxModel<Campos> model = new DefaultComboBoxModel();
        for (int i = 0; i < archivo.getCampos().size(); i++) {
            model.addElement(archivo.getCampos().get(i));
        }
        cb_campos = new JComboBox(model);
        cb_campos.updateUI();*/

            cb_campos.removeAllItems();
            for (int i = 0; i < archivo.getCampos().size(); i++) {
                cb_campos.addItem(archivo.getCampos().get(i).getName());
            }
        } else {
            System.out.println("ya no hay mas campos");
        }


    }//GEN-LAST:event_bt_removeCamposActionPerformed

    private void bt_addCamposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_addCamposActionPerformed
        jd_addCampos.pack();
        jd_addCampos.setLocationRelativeTo(null);
        jd_addCampos.setVisible(true);
        //jd_addFile.setVisible(false);
    }//GEN-LAST:event_bt_addCamposActionPerformed

    private void tf_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_nameActionPerformed

    private void rb_intActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rb_intActionPerformed
        boolean key = false;
        for (int i = 0; i < archivo.getCampos().size(); i++) {
            if (archivo.getCampos().get(i).isKey()) {
                key = true;
            }
        }
        if (key == false) {
            if (rb_int.isSelected()) {
                jl_key.setVisible(true);
                chb_key.setVisible(true);
            }
        }

    }//GEN-LAST:event_rb_intActionPerformed

    private void rb_doubleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rb_doubleActionPerformed
        // TODO add your handling code here:
        if (rb_double.isSelected()) {
            jl_key.setVisible(false);
            chb_key.setVisible(false);
        }
    }//GEN-LAST:event_rb_doubleActionPerformed

    private void rb_charActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rb_charActionPerformed
        // TODO add your handling code here:
        if (rb_char.isSelected()) {
            jl_key.setVisible(false);
            chb_key.setVisible(false);
        }
    }//GEN-LAST:event_rb_charActionPerformed

    private void tf_searchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_searchKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            searchKey();
        }
    }//GEN-LAST:event_tf_searchKeyPressed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:
        searchKey();
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jButton15ActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_jButton16ActionPerformed

    private void bt_backtomain1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_backtomain1ActionPerformed
        // TODO add your handling code here:
        jd_fileEDIT.pack();
        jd_fileEDIT.setLocationRelativeTo(null);
        jd_fileEDIT.setVisible(true);
    }//GEN-LAST:event_bt_backtomain1ActionPerformed

    private void bt_eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_eliminarActionPerformed
        try {
            // TODO add your handling code here:
            int reg = Integer.parseInt(tf_search.getText());

            //elimina el registro en la posicion x del text field
            archivo.delete(getRRN(reg));
            eliminarReg(reg);

            JOptionPane.showMessageDialog(rb_int, "Registro eliminado!");
            tf_search.setText("");
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(rb_int, "No se puedo eliminar el registro");
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_bt_eliminarActionPerformed

    private void jButton22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton22ActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jButton22ActionPerformed

    private void jButton23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton23ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton23ActionPerformed

    private void bt_backtomain3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_backtomain3ActionPerformed
        // TODO add your handling code here:
        model = new DefaultTableModel();
        model2 = new DefaultTableModel();
        model3 = new DefaultTableModel();
        if (archivo != null) {

            keyColumn = 0;

            jd_fileEDIT.pack();
            jd_fileEDIT.setLocationRelativeTo(null);
            mainPanel.setEnabled(false);
            jd_fileEDIT.setVisible(true);
            this.setVisible(false);

            for (int i = 0; i < archivo.getCampos().size(); i++) {
                String str = archivo.getCampos().get(i).getName();
                if (archivo.getCampos().get(i).isKey()) {
                    keyColumn = i;
                }
                model.addColumn(str);
                model2.addColumn(str);

            }

            int k = 0;
            if (!archivo.getRegistros().isEmpty()) {

                for (int i = 0; i < archivo.getRegistros().size(); i++) {
                    String str = archivo.getRegistros().get(i);

                    StringTokenizer tok = new StringTokenizer(str, "|", false);
                    String firstTok = tok.nextToken();

                    if (firstTok.charAt(0) != '@') {
                        System.out.println("no esta eliminado");
                        registrosAvailable.add(str);
                        Object[] rowData = null;
                        model.addRow(rowData);
                        for (int j = 0; j < model.getColumnCount(); j++) {
                            if (archivo.getCampos().get(j).isKey()) {
                                keyColumn = j;
                            }
                            if (tok.hasMoreTokens()) {
                                if (j == 0) {
                                    if (j == keyColumn) {
                                        archivo.addLlave(Integer.parseInt(firstTok.replaceAll("\\*", "")));
                                    }
                                    model.setValueAt(firstTok.replaceAll("\\*", ""), i - k, j);
                                } else {
                                    String tok3 = tok.nextToken();
                                    if (j == keyColumn) {
                                        archivo.addLlave(Integer.parseInt(tok3.replaceAll("\\*", "")));
                                    }
                                    model.setValueAt(tok3.replaceAll("\\*", ""), i - k, j);
                                }
                            }
                        }
                    } else {
                        System.out.println("eliminado");
                        k++;
                    }

                }

            }
            jt_info.setModel(model);
            lastRow = model.getRowCount();
            System.out.println(archivo.getLlaves());
            //archivo.llenarTree(registrosAvailable);
        } else {
            JOptionPane.showMessageDialog(null, "Please open a file");
        }

    }//GEN-LAST:event_bt_backtomain3ActionPerformed

    private void bt_savereg1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_savereg1ActionPerformed

        if (jt_info2.getCellEditor() != null) {
            jt_info2.getCellEditor().stopCellEditing();
        }

        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < model3.getRowCount(); i++) {
            boolean valid = true;
            boolean keyExists = false;
            sb = new StringBuilder();

            for (int j = 0; j < model3.getColumnCount(); j++) {
                int tamano = archivo.getCampos().get(j).getLength();
                System.out.println("tamano: " + tamano);
                int totalSpaces;

                if (archivo.getCampos().get(j).isKey()) {
                    keyColumn = j;
                    if (!keys.contains(Integer.parseInt((String) model3.getValueAt(i, keyColumn)))) {
                        keys.add(Integer.parseInt((String) model3.getValueAt(i, keyColumn)));
                    } else {
                        keyExists = true;
                    }
                }
                totalSpaces = tamano - ((String) model3.getValueAt(i, j)).length();
                if (!keyExists) {
                    //if(Integer.parseInt((String) model.getValueAt(i, j)) == archivo.getCampos().)
                    if (totalSpaces >= 0) {
                        if (j == model3.getColumnCount() - 1) {
                            sb.append(totalSpaces == 0 ? (String) model3.getValueAt(i, j) : (String) model3.getValueAt(i, j) + extraSpaces(totalSpaces));

                            //sb.append(((String) model.getValueAt(i, j)).length() < tamano ? (String) model.getValueAt(i, j) : (String) model.getValueAt(i, j) + extraSpaces(tamano));
                            //sb.append((String) model.getValueAt(i, j));
                        } else {
                            //sb.append((String) model.getValueAt(i, j)).append("\");
                            sb.append(totalSpaces == 0 ? (String) model3.getValueAt(i, j) + "|" : (String) model3.getValueAt(i, j) + extraSpaces(totalSpaces) + "|");

                            //sb.append(((String) model.getValueAt(i, j)).length() < tamano ? (String) model.getValueAt(i, j) + "|" : (String) model.getValueAt(i, j) + extraSpaces(tamano) + "|");
                        }
                    } else {
                        System.out.println("campo " + archivo.getCampos().get(j).getName() + "no es valido");
                        valid = false;
                    }
                }
            }
            if (keyExists) {
                System.out.println("no se agrego el registro " + i + " porque ya existe la llave");
            } else {
                if (valid) {
                    archivo.addRegistro(sb.toString());
                    int reg = Integer.parseInt((String) model3.getValueAt(i, keyColumn));
                    archivo.insertar(Integer.toString(reg), sb.toString());
                    archivo.getLlaves().add(reg);
                    keys.add(reg);
                    registrosAvailable.add(reg);
                    try {
                        int rrn = archivo.agregarRegistro(sb.toString());
                        if (rrn == -1) {
                            map.put(Integer.parseInt(model3.getValueAt(i, keyColumn).toString()), rrn);
                        } else {
                            //map.remove(map.get(rrn));
                            map.put(Integer.parseInt(model3.getValueAt(i, keyColumn).toString()), rrn);
                        }
                    } catch (IOException ex) {
                        Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } else {
                    System.out.println("no se agrego el registro");
                }
            }
        }
        JOptionPane.showMessageDialog(rb_int, "Se ha agregado el/los registro/s");
        resetTable();
        Indexar();

        //System.out.println("arbol imprimiendo");
        //archivo.llenarTree(registrosAvailable);

    }//GEN-LAST:event_bt_savereg1ActionPerformed

    private void bt_addregistry1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_addregistry1ActionPerformed
        // TODO add your handling code here:
        if (model3.getRowCount() == 0 || model3.getValueAt(model3.getRowCount() - 1, 0) != null) {
            Object[] rowData = null;
            model3.addRow(rowData);
        }

    }//GEN-LAST:event_bt_addregistry1ActionPerformed

    private void tf_modificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_modificarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_modificarActionPerformed

    private void jButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton18ActionPerformed
        StringBuilder sb = new StringBuilder();
        String old = tf_modificar.getText();
        int reg = 0;
        boolean valid = true;
        try {
            RandomAccessFile raf = new RandomAccessFile("./Archivos/" + archivo.getName() + ".txt", "rw");
            int tamanoArchivo = (int) raf.length();

            int cantidadRegistros = (tamanoArchivo - archivo.getHeaderSize()) / archivo.getTamanoReg();

            if (Integer.parseInt(tf_modificar.getText()) <= cantidadRegistros) {
                valid = true;
            } else {
                valid = false;
            }

        } catch (FileNotFoundException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);

        } catch (IOException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }

        if (valid == true) {
            for (int i = 0; i < archivo.getCampos().size(); i++) {
                String s = JOptionPane.showInputDialog("Ingrese " + archivo.getCampos().get(i).getName());
                if (s.length() < archivo.getCampos().get(i).getLength()) {
                    sb.append(s);
                    sb.append(extraSpaces(archivo.getCampos().get(i).getLength() - s.length()));
                } else if (s.length() > archivo.getCampos().get(i).getLength()) {
                    while (s.length() > archivo.getCampos().get(i).getLength()) {
                        s = JOptionPane.showInputDialog("Tamano invalido, ingrese " + archivo.getCampos().get(i).getName());
                    }
                } else {
                    sb.append(s);
                }

                if (i < archivo.getCampos().size() - 1) {
                    sb.append("|");
                }
            }

            try {
                modificarReg(old, reg, sb.toString());
                //System.out.println("RRN: " + getRRN(Integer.parseInt(tf_search.getText())));
                archivo.modificar(Integer.parseInt(tf_modificar.getText()), sb.toString());

                Indexar();
            } catch (IOException ex) {
                Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(rb_int, "Error! No existe ese registro");
            tf_modificar.setText("");
        }

    }//GEN-LAST:event_jButton18ActionPerformed

    private void bt_backtomain4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_backtomain4ActionPerformed
        jd_fileEDIT.pack();
        jd_fileEDIT.setLocationRelativeTo(null);
        jd_fileEDIT.setVisible(true);
    }//GEN-LAST:event_bt_backtomain4ActionPerformed
    /*
<<<<<<< HEAD
    private void jb_listarActionPerformed(java.awt.event.ActionEvent evt) {                                          
        try {
            //listarRegistros();
            listar2();
        } catch (IOException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        jd_listar.setLocationRelativeTo(null);
        jd_listar.pack();
        jd_listar.setVisible(true);
    }                                         
     */
    private void jButton19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton19ActionPerformed
        // TODO add your handling code here:
        jd_merge.pack();
        jd_merge.setLocationRelativeTo(null);
        jd_merge.setVisible(true);
    }//GEN-LAST:event_jButton19ActionPerformed

    private void jButton20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton20ActionPerformed
        // TODO add your handling code here:
        cb_file3.addItem(cb_file1.getSelectedItem().toString());
        mergedFile.addCampo(archivo.getCampos().get(cb_file1.getSelectedIndex()));
    }//GEN-LAST:event_jButton20ActionPerformed

    private void jButton21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton21ActionPerformed
        // TODO add your handling code here:
        archivo2 = new Archivos();
        Archivos file = new Archivos();
        String path = load();
        try {
            file = archivo2.read(path);
            BufferedReader br = new BufferedReader(new FileReader(path));
            String header = br.readLine();

            System.out.println("tamano header: " + header.length());
            file.setHeaderSize(header.length() + 1);
            int tamanoReg = 0;
            System.out.println("campos size: " + file.getCampos().size());
            for (int i = 0; i < file.getCampos().size(); i++) {
                tamanoReg += file.getCampos().get(i).getLength();
            }

            tamanoReg += (file.getCampos().size() - 1) + 1;//se le agregan la cantidad de delimitadores y el byte del salto de linea
            System.out.println("tamano registro: " + tamanoReg);
            file.setTamanoReg(tamanoReg);
            br.close();
        } catch (IOException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        filename2 = file.getName();
        archivo2 = file;

        for (int i = 0; i < archivo2.getCampos().size(); i++) {
            cb_file2.addItem(archivo2.getCampos().get(i).getName());
        }
        mergedFile = new Archivos(archivo.getName() + "MERGED w/" + archivo2.getName());
    }//GEN-LAST:event_jButton21ActionPerformed

    private void bt_modificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_modificarActionPerformed
        // TODO add your handling code here:
        StringBuilder sb = new StringBuilder();
        String old = tf_search.getText();
        int reg = 0;

        for (int i = 0; i < archivo.getCampos().size(); i++) {
            String s = JOptionPane.showInputDialog("Ingrese " + archivo.getCampos().get(i).getName());
            if (archivo.getCampos().get(i).isKey()) {
                reg = Integer.parseInt(s);
            }
            if (s.length() < archivo.getCampos().get(i).getLength()) {
                sb.append(s);
                sb.append(extraSpaces(archivo.getCampos().get(i).getLength() - s.length()));
            } else if (s.length() > archivo.getCampos().get(i).getLength()) {
                while (s.length() > archivo.getCampos().get(i).getLength()) {
                    s = JOptionPane.showInputDialog("Tamano invalido, ingrese " + archivo.getCampos().get(i).getName());
                }
            } else {
                sb.append(s);
            }

            if (i < archivo.getCampos().size() - 1) {
                sb.append("|");
            }
        }

        try {
            modificarReg(old, reg, sb.toString());
            System.out.println("RRN: " + getRRN(Integer.parseInt(tf_search.getText())));
            archivo.modificar(getRRN(Integer.parseInt(tf_search.getText())), sb.toString());

            Indexar();

        } catch (IOException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_bt_modificarActionPerformed

    private void bt_mergeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_mergeActionPerformed
        // TODO add your handling code here:
        jd_fileEDIT.setVisible(false);
        jd_merge.pack();
        jd_merge.setLocationRelativeTo(null);
        jd_merge.setVisible(true);
        for (int i = 0; i < archivo.getCampos().size(); i++) {
            cb_file1.addItem(archivo.getCampos().get(i).getName());
        }
    }//GEN-LAST:event_bt_mergeActionPerformed

    private void jb_listarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_listarActionPerformed
        try {
            //listarRegistros();
            listar2();
        } catch (IOException ex) {
            ex.printStackTrace();
            System.out.println(ex.getMessage());
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        jd_listar.setLocationRelativeTo(null);
        jd_listar.pack();
        jd_listar.setVisible(true);
    }//GEN-LAST:event_jb_listarActionPerformed

    private void bt_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_searchActionPerformed
        // TODO add your handling code here:
        jd_search.pack();
        jd_search.setLocationRelativeTo(null);
        jd_search.setVisible(true);

        jt_search.setModel(model2);
    }//GEN-LAST:event_bt_searchActionPerformed

    private void bt_excelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_excelActionPerformed
        if (archivo != null) {
            XML xml = new XML();
            WriteExcel excel = new WriteExcel();
            xml.setFileName(archivo.getName());
            xml.setCampos(archivo.getCampos());
            xml.setRegistros(archivo.getRegistros());
            try {
                xml.saveXML();
                excel.setFileName(archivo.getName());
                excel.setOutputFile("./ArchivosXML/" + archivo.getName() + ".xls");
                excel.write();

            } catch (IOException ex) {
                Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
            } catch (WriteException ex) {
                Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_bt_excelActionPerformed

    private void bt_addregistryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_addregistryActionPerformed
        // TODO add your handling code here:
        resetTable();
        jd_fileadd.pack();
        jd_fileadd.setLocationRelativeTo(null);
        jd_fileadd.setVisible(true);
    }//GEN-LAST:event_bt_addregistryActionPerformed

    private void bt_removeregActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_removeregActionPerformed
        jd_modificar.setLocationRelativeTo(null);
        jd_modificar.pack();
        jd_modificar.setVisible(true);
        // TODO add your handling code here:
        /*int row = jt_info.getSelectedRow();
        System.out.println("Row: " + row);
        //archivo.getRegistros().remove(row);
        try {
            archivo.delete(row);
        } catch (IOException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        model.removeRow(row);*/

    }//GEN-LAST:event_bt_removeregActionPerformed

    private void bt_backtomainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_backtomainActionPerformed
        // TODO add your handling code here:
        jd_addFile.dispose();
        this.setVisible(true);
    }//GEN-LAST:event_bt_backtomainActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
        this.setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        exit();
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton24ActionPerformed
        // TODO add your handling code here:
        if (cb_file2.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(this, "No ha seleccionado ningún item");
        } else {
            cb_file3.addItem(cb_file2.getSelectedItem().toString());
            mergedFile.addCampo(archivo2.getCampos().get(cb_file1.getSelectedIndex()));
        }
    }//GEN-LAST:event_jButton24ActionPerformed

    private void jButton25ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton25ActionPerformed
        // TODO add your handling code here:
        cb_file3.remove(cb_file3.getSelectedIndex());
        mergedFile.getCampos().remove(cb_file3.getSelectedIndex());
    }//GEN-LAST:event_jButton25ActionPerformed

    private void jButton26ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton26ActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_jButton26ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        // TODO add your handling code here:
        exit();
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton14ActionPerformed

    private void bt_backtomain2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_backtomain2ActionPerformed
        // TODO add your handling code here:
        jd_fileEDIT.setVisible(true);
        jd_merge.dispose();
        jd_merge.setVisible(false);
    }//GEN-LAST:event_bt_backtomain2ActionPerformed

    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
        // TODO add your handling code here:
        jd_file2Table.pack();
        jd_file2Table.setLocationRelativeTo(null);
        jd_file2Table.setVisible(true);
        jd_merge.setVisible(false);
    }//GEN-LAST:event_jButton17ActionPerformed

    private void jButton27ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton27ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton27ActionPerformed

    private void bt_backtomain5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_backtomain5ActionPerformed
        jd_file2Table.dispose();
        jd_file2Table.setVisible(false);
        jd_merge.setVisible(true);
    }//GEN-LAST:event_bt_backtomain5ActionPerformed

    private void bt_closefileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_closefileActionPerformed
        // TODO add your handling code here:
        archivo = new Archivos();
        jl_openfile.setText("<no opened file>");
        bt_closefile.setVisible(false);
    }//GEN-LAST:event_bt_closefileActionPerformed

    private void jb_indexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_indexActionPerformed
        Indexar();
    }//GEN-LAST:event_jb_indexActionPerformed

    private void searchKey() {
        for (int i = 0; i < model2.getRowCount(); i++) {
            model2.removeRow(i);
        }

        String key = tf_search.getText();
        String value = archivo.buscarTree(key);

        System.out.println(value);

        if (value != null) {
            StringTokenizer tok = new StringTokenizer(value, "|", false);
            Object[] rowData = null;
            model2.addRow(rowData);
            for (int j = 0; j < model2.getColumnCount(); j++) {
                if (tok.hasMoreTokens()) {
                    model2.setValueAt(tok.nextToken().replaceAll("\\*", ""), 0, j);
                }
            }
            jt_search.setModel(model2);
        } else {
            JOptionPane.showMessageDialog(rb_int, "No se encontro la llave!");
        }

    }

    public void eliminarReg(int reg) {
        int index = archivo.getLlaves().indexOf(reg);
        archivo.getLlaves().remove(index);
        keys.remove((Object) reg);
        registrosAvailable.remove((Object) reg);
        archivo.eliminar(tf_search.getText(), registrosAvailable);
    }

    public void modificarReg(String prev, int reg, String val) throws IOException {
        int old = Integer.parseInt(prev);
        //archivo.delete(old);
        archivo.getLlaves().remove((Object) old);
        keys.remove((Object) old);
        registrosAvailable.remove((Object) old);
        archivo.eliminar(tf_search.getText(), registrosAvailable);

        //archivo.delete(reg);
        archivo.insertar(Integer.toString(reg), val);
        archivo.getLlaves().add(reg);
        keys.add(reg);
        registrosAvailable.add(reg);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup bg_type;
    private javax.swing.ButtonGroup bg_typeEdit;
    private javax.swing.JButton bt_addCampos;
    private javax.swing.JButton bt_addregistry;
    private javax.swing.JButton bt_addregistry1;
    private javax.swing.JButton bt_backtoAddFile;
    private javax.swing.JButton bt_backtoAddFile1;
    private javax.swing.JButton bt_backtoMain;
    private javax.swing.JButton bt_backtomain;
    private javax.swing.JButton bt_backtomain1;
    private javax.swing.JButton bt_backtomain2;
    private javax.swing.JButton bt_backtomain3;
    private javax.swing.JButton bt_backtomain4;
    private javax.swing.JButton bt_backtomain5;
    private javax.swing.JButton bt_closefile;
    private javax.swing.JButton bt_createFile;
    private javax.swing.JButton bt_edit;
    private javax.swing.JButton bt_eliminar;
    private javax.swing.JButton bt_excel;
    private javax.swing.JButton bt_fileedit;
    private javax.swing.JButton bt_merge;
    private javax.swing.JButton bt_modificar;
    private javax.swing.JButton bt_removeCampos;
    private javax.swing.JButton bt_removereg;
    private javax.swing.JButton bt_savereg1;
    private javax.swing.JButton bt_search;
    private javax.swing.JComboBox<String> cb_campos;
    private javax.swing.JComboBox<String> cb_file1;
    private javax.swing.JComboBox<String> cb_file2;
    private javax.swing.JComboBox<String> cb_file3;
    private javax.swing.JCheckBox chb_key;
    private javax.swing.JCheckBox chb_keyEdit;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton19;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton20;
    private javax.swing.JButton jButton21;
    private javax.swing.JButton jButton22;
    private javax.swing.JButton jButton23;
    private javax.swing.JButton jButton24;
    private javax.swing.JButton jButton25;
    private javax.swing.JButton jButton26;
    private javax.swing.JButton jButton27;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList<String> jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton jb_addFile;
    private javax.swing.JButton jb_addFile1;
    private javax.swing.JButton jb_addFile2;
    private javax.swing.JButton jb_completeFile;
    private javax.swing.JButton jb_index;
    private javax.swing.JButton jb_listar;
    private javax.swing.JDialog jd_addCampos;
    private javax.swing.JDialog jd_addFile;
    private javax.swing.JDialog jd_editCampos;
    private javax.swing.JDialog jd_file2Table;
    private javax.swing.JDialog jd_fileEDIT;
    private javax.swing.JDialog jd_fileadd;
    private javax.swing.JDialog jd_listar;
    private javax.swing.JDialog jd_merge;
    private javax.swing.JDialog jd_modificar;
    private javax.swing.JDialog jd_search;
    private javax.swing.JLabel jl_fileName;
    private javax.swing.JLabel jl_key;
    private javax.swing.JLabel jl_openfile;
    private javax.swing.JList<String> jl_registros2;
    private javax.swing.JPanel jp_addFile;
    private javax.swing.JPanel jp_addFileTopBar;
    private javax.swing.JTable jt_info;
    private javax.swing.JTable jt_info2;
    private javax.swing.JTable jt_search;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JRadioButton rb_char;
    private javax.swing.JRadioButton rb_charEdit;
    private javax.swing.JRadioButton rb_double;
    private javax.swing.JRadioButton rb_doubleEdit;
    private javax.swing.JRadioButton rb_int;
    private javax.swing.JRadioButton rb_intEdit;
    private javax.swing.JTextField tf_camposLength;
    private javax.swing.JTextField tf_camposName;
    private javax.swing.JTextField tf_camposNameEdit;
    private javax.swing.JTextField tf_lengthEdit;
    private javax.swing.JTextField tf_modificar;
    private javax.swing.JTextField tf_name;
    private javax.swing.JTextField tf_search;
    // End of variables declaration//GEN-END:variables

    Archivos archivo;
    Archivos archivo2;
    Archivos mergedFile;
    String filename;
    String filename2;
    Campos tempCamp;
    ArrayList indexOffsets = new ArrayList();
    ArrayList keys = new ArrayList();
    ArrayList registrosAvailable = new ArrayList();
    DefaultTableModel model = new DefaultTableModel();
    DefaultTableModel model2 = new DefaultTableModel();
    DefaultTableModel model3 = new DefaultTableModel();
    boolean hasKey;
    int lastRow;
    int keyColumn;

    public void exit() {
        int p = JOptionPane.showConfirmDialog(this, "Are you sure you want to quit");
        if (p == 0) {
            System.exit(0);
        }
    }

    public String load() {
        JFileChooser fileChooser = new JFileChooser("./Archivos/");
        fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);

        FileNameExtensionFilter filtro = new FileNameExtensionFilter("Archivos de texto", "txt");
        fileChooser.setFileFilter(filtro);

        int seleccion = fileChooser.showOpenDialog(this);

        if (seleccion == JFileChooser.APPROVE_OPTION) {
            File dir = fileChooser.getSelectedFile();
            filename = dir.getName();
            System.out.println(dir.getPath());
            return dir.getPath();
        } else {
            return null;
        }
    }

    private class XML {

        String fileName;
        ArrayList<Campos> campos = new ArrayList();
        ArrayList<String> registros = new ArrayList();

        public String getFileName() {
            return fileName;
        }

        public void setFileName(String fileName) {
            this.fileName = fileName;
        }

        public ArrayList<Campos> getCampos() {
            return campos;
        }

        public void setCampos(ArrayList<Campos> campos) {
            this.campos = campos;
        }

        public ArrayList<String> getRegistros() {
            return registros;
        }

        public void setRegistros(ArrayList<String> registros) {
            this.registros = registros;
        }

        public void saveXML() throws IOException {
            String path = "./ArchivosXML/" + fileName + ".XML";
            System.out.println("Name: " + fileName);
            File f = new File(path);
            String saving = "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n";
            BufferedWriter writer = new BufferedWriter(new FileWriter(f));
            if (!archivo.getCampos().isEmpty()) {
                for (int i = 0; i < archivo.getCampos().size(); i++) {
                    if (archivo.getCampos().get(i).isKey() == true) {
                        saving += "\t<Key>\n";
                    }
                    saving += "\t\t<" + campos.get(i).getType() + " [" + campos.get(i).getLength() + "]> \n";
                    //Esto va dentro de un for
                    for (int j = 0; j < model.getColumnCount(); j++) {
                        if (campos.get(i).getName().equals(model.getColumnName(i))) {

                            for (int k = 0; k < model.getRowCount(); k++) {
                                saving += "\t\t\t<" + campos.get(i).getName() + ">" + model.getValueAt(k, j) + "</" + campos.get(i).getName() + ">\n";
                            }

                        }
                    }
                    saving += "\t\t</" + campos.get(i).getType() + ">\n";
                    if (archivo.getCampos().get(i).isKey() == true) {
                        saving += "\t</Key>\n";
                    }
                    //saving = "";
                    //writer.append(saving);
                }
                writer.write(saving);

            }

            writer.close();
        }

    }

    public class WriteExcel {

        private WritableCellFormat timesBoldUnderline;
        private WritableCellFormat times;
        private String inputFile;
        private String fileName;
        private ArrayList<Campos> campos = new ArrayList();
        CellView cv;

        public ArrayList<Campos> getCampos() {
            return campos;
        }

        public void setCampos(ArrayList<Campos> campos) {
            this.campos = campos;
        }

        public void setOutputFile(String inputFile) {
            this.inputFile = inputFile;
        }

        public String getFileName() {
            return fileName;
        }

        public void setFileName(String fileName) {
            this.fileName = fileName;
        }

        public void write() throws IOException, WriteException {
            String path = "./ArchivosXML/" + fileName + ".xls";
            File file = new File(path);
            WorkbookSettings wbSettings = new WorkbookSettings();

            wbSettings.setLocale(new Locale("en", "EN"));

            WritableWorkbook workbook = Workbook.createWorkbook(file, wbSettings);
            workbook.createSheet("Report", 0);
            WritableSheet excelSheet = workbook.getSheet(0);
            createLabel(excelSheet);
            createContent(excelSheet);

            workbook.write();
            workbook.close();
        }

        private void createLabel(WritableSheet sheet)
                throws WriteException {
            // Lets create a times font
            WritableFont times10pt = new WritableFont(WritableFont.TAHOMA, 12, WritableFont.NO_BOLD, false);
            // Define the cell format       
            times = new WritableCellFormat(times10pt);
            // Lets automatically wrap the cells
            times.setWrap(true);

            // create create a bold font with unterlines
            WritableFont times10ptBoldUnderline = new WritableFont(WritableFont.TAHOMA, 16, WritableFont.BOLD, false, UnderlineStyle.NO_UNDERLINE);
            timesBoldUnderline = new WritableCellFormat(times10ptBoldUnderline);
            // Lets automatically wrap the cells
            timesBoldUnderline.setWrap(true);

            cv = new CellView();
            cv.setFormat(times);
            cv.setFormat(timesBoldUnderline);
            //cv.setAutosize(true);
            sheet.getSettings().setDefaultColumnWidth(17);
            sheet.getSettings().setDefaultRowHeight(21 * 20);
            // Write a few headers
            for (int i = 0; i < archivo.getCampos().size(); i++) {
                addCaption(sheet, i, 0, archivo.getCampos().get(i).getName());
            }
        }

        private void createContent(WritableSheet sheet) throws WriteException, RowsExceededException {

            for (int i = 0; i < model.getColumnCount(); i++) {
                for (int j = 0; j < model.getRowCount(); j++) {
                    addLabel(sheet, i, j + 1, (String) model.getValueAt(j, i));
                }
            }
            cv.setAutosize(true);
        }

        private void addCaption(WritableSheet sheet, int column, int row, String s)
                throws RowsExceededException, WriteException {
            Label label;
            label = new Label(column, row, s, timesBoldUnderline);
            sheet.addCell(label);
        }

        private void addNumber(WritableSheet sheet, int column, int row,
                Integer integer) throws WriteException, RowsExceededException {
            jxl.write.Number number;
            number = new jxl.write.Number(column, row, integer, times);
            sheet.addCell(number);
        }

        private void addLabel(WritableSheet sheet, int column, int row, String s)
                throws WriteException, RowsExceededException {
            Label label;
            label = new Label(column, row, s, times);
            sheet.addCell(label);
        }
    }

    public String extraSpaces(int count) {
        StringBuilder sb = new StringBuilder();

        for (int i = 0; i < count; i++) {
            sb.append("*");
        }

        return sb.toString();
    }

    public void resetTable() {
        // model = new DefaultTableModel();
        model3 = new DefaultTableModel();
        for (int i = 0; i < archivo.getCampos().size(); i++) {
            String str = archivo.getCampos().get(i).getName();
            model3.addColumn(str);
        }

        jt_info2.setModel(model3);
        //jt_info.setModel(model3);
    }

    public boolean keyExists(int key) {
        if (archivo.getLlaves().contains(key)) {
            return false;
        }
        return true;
    }

    /*
    public void addToIndex(String key, int offset) throws IOException {

        //System.out.println("filename: " + filename);
        //String avail = "./Archivos/" + name.replaceFirst("[.][^.]+$", "")+ ".avail";
        File f2 = new File("./Archivos/" + archivo.getName() + ".ind");

        //File f2 = new File("./Archivos/" + filename.replaceFirst("[.][^.]+$", "") + ".ind");
        try ( //BufferedWriter bw = new BufferedWriter(new FileWriter(f2));
                BufferedWriter bw = new BufferedWriter(new FileWriter(f2, true))) {
            bw.append(key);
            bw.append(",");
            bw.append(Integer.toString(offset));
            bw.append(";");

            bw.close();

            cargarIndexFile();
        }

    }
     */
    public void cargarIndexFile() throws FileNotFoundException {
        //System.out.println("filename: " + filename);
        keys = new ArrayList();
        indexOffsets = new ArrayList();
        /*BufferedReader br = new BufferedReader(new FileReader(filename + ".ind"));
        File f = new File(filename + ".ind");*/
        Scanner sc;
        try {
            sc = new Scanner(new File("./Archivos/" + filename.replaceFirst("[.][^.]+$", "") + ".ind"));
            sc.useDelimiter(";");

            while (sc.hasNext()) {
                StringTokenizer st = new StringTokenizer(sc.next(), ",", false);
                int key = Integer.parseInt(st.nextToken());
                System.out.println("key: " + key);
                int index = Integer.parseInt(st.nextToken());
                System.out.println("index: " + index);
                indexOffsets.add(index);
                keys.add(key);
            }
        } catch (Exception e) {
            System.out.println("error");
        }

        /*
        
        File f = new File(path);
        Archivos archivo = new Archivos();
        BufferedReader reader = new BufferedReader(new FileReader(f));
        Scanner sc = new Scanner(f);
        Scanner sc2 = new Scanner(f);

        String header = sc2.nextLine();
        //HEADER
        //StringTokenizer token = new StringTokenizer(header, ",", false);
         */
    }

    public void listar2() throws FileNotFoundException {
        DefaultListModel listmodel = new DefaultListModel();
        //JList list = new JList((ListModel) model);

        //File f2 = new File("./Archivos/" + archivo.getName() + ".ind");
        try {
            RandomAccessFile raf = new RandomAccessFile("./Archivos/" + archivo.getName() + ".txt", "rw");

            int cantidadReg = (int) (raf.length() - archivo.getHeaderSize()) / archivo.getTamanoReg();

            for (int posicion = 1; posicion <= cantidadReg; posicion++) {
                int offset = archivo.getHeaderSize() + ((posicion - 1) * archivo.getTamanoReg());
                raf.seek(offset);
                StringBuilder sb = new StringBuilder();
                sb.append(posicion).append(" ");

                String line = raf.readLine();
                System.out.println("readline: " + line);
                if (line != null && line.length() > 0 && (line.charAt(0)) != '@') {
                    //Object[] rowData = null;
                    // model.addRow(rowData);
                    //System.out.println("entro if");
                    String[] campos = line.split("\\|");
                    System.out.println("campos length " + campos.length);
                    for (int j = 0; j < campos.length; j++) {
                        sb.append(archivo.getCampos().get(j).getName()).append(": ");
                        sb.append(campos[j].replaceAll("\\*", ""));
                        if (j < campos.length - 1) {
                            sb.append(" | ");
                        }
                        if (archivo.getCampos().get(j).isKey()) {
                            keyColumn = j;
                        }
                        //model.setValueAt(campos[j].replaceAll("\\*", ""), count-k, j);

                    }
                    //System.out.println("registro: " + line);
                    listmodel.addElement(sb.toString());
                } else {
                    System.out.println("registro eliminado");
                    //k++;
                }

            }

        } catch (Exception e) {
            e.printStackTrace();
            System.out.println(e.getMessage());
        }

        jl_registros2.setModel(listmodel);

    }

    public void listarRegistros() throws FileNotFoundException, IOException {
        //resetTable();
        DefaultListModel listmodel = new DefaultListModel();
        //JList list = new JList((ListModel) model);

        File f2 = new File("./Archivos/" + archivo.getName() + ".ind");
        try ( //BufferedWriter bw = new BufferedWriter(new FileWriter(f2));
                BufferedReader br = new BufferedReader(new FileReader(f2))) {
            RandomAccessFile raf = new RandomAccessFile("./Archivos/" + archivo.getName() + ".txt", "rw");
            Scanner s = new Scanner(br);
            s.useDelimiter("\n");

            int count = 0;
            int k = 0;
            while (s.hasNext()) {
                String elemento = s.next();
                System.out.println("elemento: " + elemento);
                String[] x = elemento.split(",");

                System.out.println("x[1]: " + x[1]);
                int posicion = Integer.parseInt(x[1]);

                int offset = archivo.getHeaderSize() + ((posicion - 1) * archivo.getTamanoReg());
                //System.out.println("offset: " + offset);
                raf.seek(offset);
                StringBuffer sb = new StringBuffer();
                sb.append(count + 1).append(" ");

                String line = raf.readLine();
                System.out.println("readline: " + line);
                /*                while(line.equals("")){
                    System.out.println("entro while");
                    raf.readLine();
                }*/
                if (line != null && (line.charAt(0)) != '@') {
                    //Object[] rowData = null;
                    // model.addRow(rowData);
                    String[] campos = line.split("\\|");
                    System.out.println("campos length " + campos.length);
                    for (int j = 0; j < campos.length; j++) {
                        sb.append(archivo.getCampos().get(j).getName()).append(": ");
                        sb.append(campos[j].replaceAll("\\*", ""));
                        if (j < campos.length - 1) {
                            sb.append(" | ");
                        }
                        if (archivo.getCampos().get(j).isKey()) {
                            keyColumn = j;
                        }
                        //model.setValueAt(campos[j].replaceAll("\\*", ""), count-k, j);

                    }
                    //System.out.println("registro: " + line);
                    listmodel.addElement(sb.toString());
                } else {
                    System.out.println("registro eliminado");
                    //k++;
                }
                count++;
            }
            jl_registros2.setModel(listmodel);
            //jt_info.setModel(model);

            br.close();
        }
    }

    Map<Integer, Integer> map = new TreeMap<>();

    public void Indexar() {
        map = new TreeMap<>();

        /*
        for (int i = 0; i < keys.size(); i++) {
            System.out.println("key: " + keys.get(i));
            System.out.println("offset: " + indexOffsets.get(i));
        }*/
        try {
            RandomAccessFile raf = new RandomAccessFile("./Archivos/" + archivo.getName() + ".txt", "r");
            int tamanoArch = (int) raf.length();
            int cantReg = (tamanoArch - archivo.getHeaderSize()) / archivo.getTamanoReg();
            System.out.println("cantidad Reg: " + cantReg);

            for (int i = 1; i <= cantReg; i++) {
                int offset = ((i - 1) * archivo.getTamanoReg()) + archivo.getHeaderSize();
                System.out.println("oofset: " + offset);
                raf.seek(offset);
                String linea = raf.readLine();

                Scanner sc = new Scanner(linea);
                sc.useDelimiter("\\|");

                String tok = "";
                if (keyColumn == 0) {
                    tok = sc.next().replaceAll("\\*", "");
                    System.out.println("tok: " + tok);
                } else {//probar con j <=
                    for (int j = 0; j <= keyColumn; j++) {
                        tok = sc.next();
                        System.out.println("tok: " + tok);
                    }
                }

                int key = Integer.parseInt(tok.replaceAll("\\*", ""));

                map.put(key, i);
                keys.add(key);
                indexOffsets.add(i);
                //System.out.println("keys size : " + keys.size());

            }

            BufferedWriter bw = new BufferedWriter(new FileWriter("./Archivos/" + archivo.getName() + ".ind"));
            //Map<Integer,Integer> tMap= new TreeMap<Integer,>(map) 

            for (Map.Entry<Integer, Integer> entry : map.entrySet()) {
                String fin = "";
                String k = entry.getKey().toString();
                while (k.length() + fin.length() < 6) {
                    fin += "0";
                }
                fin += k;
                bw.write(fin);
                bw.write(",");

                String fin2 = "";
                String pos = entry.getValue().toString();
                while (pos.length() + fin2.length() < 6) {
                    fin2 += "0";
                }
                fin2 += pos;
                bw.write(fin2);
                bw.write("\n");

                System.out.println(entry.getKey() + "/" + entry.getValue());
            }

            bw.close();
            raf.close();

        } catch (FileNotFoundException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public int getRRN(int key) throws FileNotFoundException, IOException {
        return map.get(key);

    }

}
